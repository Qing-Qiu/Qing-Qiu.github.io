<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正确括号序列编辑器(Correct Bracket Sequence Editor)</title>
      <link href="/2021/12/12/CBSE/"/>
      <url>/2021/12/12/CBSE/</url>
      
        <content type="html"><![CDATA[<hr><p>题目链接：<a href="https://www.luogu.com.cn/problem/CF670E">洛谷</a>  <a href="https://codeforces.com/problemset/problem/670/E">Codeforces</a></p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>最近，Polycarp开始开发一种仅适用于正确括号序列（缩写为CBS）的文本编辑器。请注意，如果可以通过添加“+”-s和“1”-s来获得正确的数学表达式，则括号序列是正确的。例如，序列“（（））（）”“（）”和“（（）（（）））”是正确的，而“）（”“（（）”和“（（）））（”是不正确的。CBS中的每个括号都有一对。例如，在“（（）（（）））”中：<br>第1个括号与第8个括号配对，<br>第2个括号与第3个括号配对，<br>第3个括号与第2个括号配对，<br>第4个括号与第7个括号配对，<br>第5个括号与第6个括号配对，<br>第6个括号与第5个括号配对，<br>第7个括号与第4个括号配对，<br>第8个括号与第1个括号配对。<br>Polycarp的编辑器目前在使用CBS期间仅支持三种操作。编辑器中的光标占据其中一个括号的整个位置（而不是括号之间的位置！）。支持三种操作：<br>«L»-将光标向左移动一个位置，<br>«R»-将光标向右移动一个位置，<br>«D»-删除光标所在的括号，删除与其配对的括号以及它们之间的所有括号（即，删除光标所在的括号和与其配对的括号之间的子字符串）。<br>操作“D”后，光标移动到最右边的括号中（当然，在未删除的括号中）。如果没有这样的括号（即，CBS的后缀已被删除），则光标将移动到最靠近左侧的括号（当然，在未删除的括号中）。<br>下面的图片说明了操作“D”的几种用法。</p><img src="/.io//12/12/CBSE/CBSE.png" class title="这是一张图片"><p>Polycarp的编辑器不支持所有不正确的操作（将光标移到CBS的末尾，删除整个CBS等）。<br>Polycarp对他的开发感到非常自豪，你能实现他的编辑器的功能吗？</p><h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>第一行包含三个正整数n、m和p（2≤N≤500000, 1≤M≤500000, 1≤P≤n）——正确括号顺序中括号的数量、操作的数量和光标的初始位置。序列中的位置从左到右编号，从1开始。保证n是偶数。<br>它后面是由n个字符组成的字符串“（“和”）”，构成正确的括号序列。<br>然后跟随一个由m个字符组成的字符串“L”“R”和“D”——一系列操作。从第一个到最后一个，一个接一个地进行操作。可以保证给定的操作不会将光标移到括号序列之外，并且在所有操作之后，括号序列将是非空的。</p><h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>打印正确的括号顺序，这是对初始顺序应用所有操作后获得的结果。</p><h3 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h3><p>8 4 5<br>(())()()<br>RDLD</p><h3 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h3><p>()</p><h3 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h3><p>12 5 3<br>((()())(()))<br>RRDLD</p><h3 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h3><p>(()(()))</p><h3 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h3><p>8 8 8<br>(())()()<br>LLLLLLDD</p><h3 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h3><p>()()</p><h3 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h3><p>在第一个样例中，光标最初位于位置5。考虑编辑的过程：命令“R”-光标移动到右侧的位置6；命令“D”-从位置5到位置6删除括号。在CBS采取形式（（））（）之后，光标位于位置5；命令“L”-光标移动到左侧的位置4；命令“D”-从位置1到位置4删除括号。在CBS采用（）形式之后，光标位于位置1。<br>因此，答案等于（）。</p><h3 id="题解部分"><a href="#题解部分" class="headerlink" title="题解部分"></a>题解部分</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,p;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">list&lt;<span class="keyword">char</span>&gt; a;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;p;</span><br><span class="line">a.<span class="built_in">push_back</span>(<span class="string">&#x27;!&#x27;</span>);<span class="comment">//在链表头设置围栏 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">cin&gt;&gt;c;</span><br><span class="line">a.<span class="built_in">push_back</span>(c); </span><br><span class="line">&#125;</span><br><span class="line">list&lt;<span class="keyword">char</span>&gt;::iterator it;</span><br><span class="line">list&lt;<span class="keyword">char</span>&gt;::iterator posBeg,posEnd;<span class="comment">//所要删除的起始位和终止位 </span></span><br><span class="line">list&lt;<span class="keyword">char</span>&gt;::iterator temp;</span><br><span class="line">it=a.<span class="built_in">begin</span>();</span><br><span class="line">it++;<span class="comment">//起始值为原起始值后面一位 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=p;i++) it++;<span class="comment">//后移至p位 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">cin&gt;&gt;c;</span><br><span class="line"><span class="keyword">if</span> (c==<span class="string">&#x27;R&#x27;</span>) it++;<span class="comment">//R指令右移一位 </span></span><br><span class="line"><span class="keyword">if</span> (c==<span class="string">&#x27;L&#x27;</span>) it--;<span class="comment">//L指令左移一位 </span></span><br><span class="line"><span class="keyword">if</span> (c==<span class="string">&#x27;D&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (*it==<span class="string">&#x27;(&#x27;</span>) &#123;<span class="comment">//D指令判断是否左括号 </span></span><br><span class="line">posBeg=it;<span class="comment">//所要删除的起始位在当前位置 </span></span><br><span class="line">posEnd=it;</span><br><span class="line">posEnd++;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">1</span>;<span class="comment">//当前位置为(所以要向右移 </span></span><br><span class="line"><span class="keyword">for</span> (temp=posEnd;temp!=a.<span class="built_in">end</span>();temp++) &#123;<span class="comment">//从起始位后面一位开始找 </span></span><br><span class="line"><span class="keyword">if</span> (*temp==<span class="string">&#x27;(&#x27;</span>) cnt++;<span class="comment">//遇到(叠加计数器+1 </span></span><br><span class="line"><span class="keyword">if</span> (*temp==<span class="string">&#x27;)&#x27;</span>) cnt--;<span class="comment">//遇到)抵消计数器-1 </span></span><br><span class="line"><span class="keyword">if</span> (cnt==<span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">//匹配结束，退出 </span></span><br><span class="line">&#125;</span><br><span class="line">posEnd=temp;<span class="comment">//把所要删除的终止位赋值给posEnd </span></span><br><span class="line">posEnd++;</span><br><span class="line">temp=posEnd;</span><br><span class="line"><span class="keyword">if</span> (temp==a.<span class="built_in">end</span>()) <span class="comment">//下一次操作后光标的重定位</span></span><br><span class="line">it--;<span class="comment">//如果所要删除的终止位后面是NULL，就定位到之前起始位前面一位</span></span><br><span class="line"><span class="keyword">else</span> it=temp;<span class="comment">//否则就定位到所要删除的终止位后面一位 </span></span><br><span class="line"><span class="keyword">for</span> (temp=posBeg;temp!=posEnd;)<span class="comment">//删 </span></span><br><span class="line">a.<span class="built_in">erase</span>(temp++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*it==<span class="string">&#x27;)&#x27;</span>) &#123;<span class="comment">//D指令判断是否右括号 </span></span><br><span class="line">posBeg=it;</span><br><span class="line">posEnd=it;<span class="comment">//所要删除的终止位在当前位置 </span></span><br><span class="line">posBeg--;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">1</span>;<span class="comment">//当前位置为)所以要向左移 </span></span><br><span class="line"><span class="keyword">for</span> (temp=posBeg;temp!=a.<span class="built_in">begin</span>();temp--) &#123;<span class="comment">//从终止位前面一位开始找</span></span><br><span class="line"><span class="keyword">if</span> (*temp==<span class="string">&#x27;)&#x27;</span>) cnt++;<span class="comment">//遇到)叠加计数器+1 </span></span><br><span class="line"><span class="keyword">if</span> (*temp==<span class="string">&#x27;(&#x27;</span>) cnt--;<span class="comment">//遇到(抵消计数器-1 </span></span><br><span class="line"><span class="keyword">if</span> (cnt==<span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">//匹配结束，退出 </span></span><br><span class="line">&#125;</span><br><span class="line">posBeg=temp;<span class="comment">//把所要删除的起始位赋值给posBeg </span></span><br><span class="line">posEnd++;</span><br><span class="line">temp=posEnd;</span><br><span class="line"><span class="keyword">if</span> (temp==a.<span class="built_in">end</span>()) &#123;<span class="comment">//下一次操作后光标的重定位</span></span><br><span class="line">it=posBeg; </span><br><span class="line">it--;<span class="comment">//如果所要删除的终止位后面是NULL，就定位到之前起始位前面一位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> it++;<span class="comment">//否则就定位到所要删除的终止位后面一位 </span></span><br><span class="line"><span class="keyword">for</span> (temp=posBeg;temp!=posEnd;)<span class="comment">//删</span></span><br><span class="line">a.<span class="built_in">erase</span>(temp++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">temp=a.<span class="built_in">begin</span>();</span><br><span class="line">temp++;<span class="comment">//第一位是围栏 </span></span><br><span class="line"><span class="keyword">for</span> (it=temp;it!=a.<span class="built_in">end</span>();it++) </span><br><span class="line">cout&lt;&lt;*it;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="花絮-amp-起因"><a href="#花絮-amp-起因" class="headerlink" title="花絮&amp;起因"></a>花絮&amp;起因</h3><p>由于Titan让我做翻译&amp;做测试数据<br>于是我生产了以下不忍直视的随机数生成程序</p><h3 id="好玩の随机数"><a href="#好玩の随机数" class="headerlink" title="好玩の随机数"></a>好玩の随机数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">srand</span>((<span class="keyword">int</span>)<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line"><span class="keyword">int</span> n,m,p;</span><br><span class="line"></span><br><span class="line">n=<span class="built_in">rand</span>()%<span class="number">250</span>;</span><br><span class="line">n*=<span class="number">2</span>;</span><br><span class="line">m=<span class="built_in">rand</span>()%<span class="number">100</span>;</span><br><span class="line">m*=<span class="number">2</span>;</span><br><span class="line"><span class="comment">//n=rand()%250000;</span></span><br><span class="line"><span class="comment">//n=n*2;</span></span><br><span class="line"><span class="comment">//m=rand()%250000;</span></span><br><span class="line"><span class="comment">//m=m*2;</span></span><br><span class="line">p=<span class="built_in">rand</span>()%n;</span><br><span class="line">cout&lt;&lt;n&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;m&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;p&lt;&lt;endl;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">s=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">c=<span class="string">&#x27;(&#x27;</span>+<span class="built_in">rand</span>()%<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (c==<span class="string">&#x27;(&#x27;</span>) cnt++;</span><br><span class="line"><span class="keyword">else</span> cnt--;</span><br><span class="line"><span class="keyword">if</span> (cnt==<span class="number">-1</span>) &#123;</span><br><span class="line">cnt+=<span class="number">2</span>;</span><br><span class="line">c=<span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">s=s+c;</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="keyword">while</span> (cnt!=<span class="number">0</span>);</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line"><span class="comment">//直到找到匹配的括号位置（懒人方法） </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="built_in">rand</span>()%<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (k==<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;L&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (k==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;R&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;D&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//并没有判定迭代器是否飞出去 </span></span><br><span class="line"></span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="心得-amp-解释"><a href="#心得-amp-解释" class="headerlink" title="心得&amp;解释"></a>心得&amp;解释</h3><ul><li>题目很长，翻译成中文1100字，不过废话很多。</li><li>狠狠地体验了迭代器的运用。并使用了对头部和尾部的特殊操作。</li><li>coding完之后，过了样例以后有点开心，交上去TLE的绝望。之后想挣扎，把整个程序写了个注释，还是没有AC。之后询问了某位大佬，他告诉我是迭代器失效的问题。（虽然这个问题我在前面部分尽力规避了，但还是在最后erase的部分出了岔子。把for()中的递增语句移到循环体中，就可以防止迭代器失效的问题。）</li><li>在制作数据的过程中，学到了随机数、文件读写的运用。难点是括号部分完全匹配以及题中的三个指令使得指针不越界。我在随机数生成程序中完成了用循环强制进行括号匹配，由于我源代码的特性，使得指针越界操作直接使程序无法运行，可以保证生成的指令序列合法。<br>由于能力有限，随机数n&lt;500,m&lt;100。再下去我随机数生成程序的效率也不够高了。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> solved </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2021/12/12/blog0/"/>
      <url>/2021/12/12/blog0/</url>
      
        <content type="html"><![CDATA[<p>这是我第一篇博客。<br>我就在这里放一些我平常学习用的网站以及一些我觉得有意思的网站。</p><ol><li><a href="https://www.52pojie.cn/">吾爱破解</a></li><li><a href="https://www.bilibili.com/">bilibili</a></li><li><a href="https://www.luogu.com.cn/">洛谷</a></li><li><a href="https://leetcode-cn.com/">力扣</a></li><li><a href="https://pintia.cn/">拼题A</a></li><li><a href="https://codeforces.com/">Codeforces</a></li><li><a href="http://www.51nod.com/">51nod</a></li><li><a href="https://www.csdn.net/">CSDN</a></li><li><a href="https://en.cppreference.com/w/">cppreference</a></li><li><a href="https://acm.hdu.edu.cn/">杭电OJ</a></li><li><a href="https://www.runoob.com/">菜鸟教程</a></li><li><a href="https://www.icourse163.org/">慕课</a></li><li><a href="https://vjudge.net/">VirtualJudge</a></li><li><a href="https://projecteuler.net/">ProjectEuler</a></li></ol><h3 id="再来放一个经典a-b程序"><a href="#再来放一个经典a-b程序" class="headerlink" title="再来放一个经典a+b程序"></a>再来放一个经典a+b程序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    cout&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
